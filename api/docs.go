// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "http://cloud-barista.github.io",
            "email": "contact-to-cloud-barista@googlegroups.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/cloudmodel": {
            "get": {
                "description": "Get a list of cloud models.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[API] Cloud Migration Models"
                ],
                "summary": "Get a list of cloud models",
                "responses": {
                    "200": {
                        "description": "(sample) This is a list of models",
                        "schema": {
                            "$ref": "#/definitions/pkg_api_rest_handler.GetCloudModelsResp"
                        }
                    },
                    "404": {
                        "description": "model not found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new cloud model with the given information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[API] Cloud Migration Models"
                ],
                "summary": "Create a new cloud model",
                "parameters": [
                    {
                        "description": "model information",
                        "name": "Model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_api_rest_handler.CreateCloudModelReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "(Sample) This is a sample description for success response in Swagger UI",
                        "schema": {
                            "$ref": "#/definitions/pkg_api_rest_handler.CreateCloudModelResp"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/cloudmodel/{id}": {
            "get": {
                "description": "Get a specific cloud model.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[API] Cloud Migration Models"
                ],
                "summary": "Get a specific cloud model",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Model ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(Sample) a model",
                        "schema": {
                            "$ref": "#/definitions/pkg_api_rest_handler.GetCloudModelResp"
                        }
                    },
                    "404": {
                        "description": "model not found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a cloud model with the given information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[API] Cloud Migration Models"
                ],
                "summary": "Update a cloud model",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Model ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Model information to update",
                        "name": "Model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_api_rest_handler.UpdateCloudModelReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "(Sample) This is a sample description for success response in Swagger UI",
                        "schema": {
                            "$ref": "#/definitions/pkg_api_rest_handler.UpdateCloudModelResp"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a cloud model with the given information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[API] Cloud Migration Models"
                ],
                "summary": "Delete a cloud model",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Model ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Model deletion successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Model Not Found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/httpVersion": {
            "get": {
                "description": "Checks and logs the HTTP version of the incoming request to the server console.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] System management"
                ],
                "summary": "Check HTTP version of incoming request",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pkg_api_rest_handler.ResHTTPVersion"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/pkg_api_rest_handler.ResHTTPVersion"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pkg_api_rest_handler.ResHTTPVersion"
                        }
                    }
                }
            }
        },
        "/model/{isTargetModel}": {
            "get": {
                "description": "Get a list of all user models.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[API] Migration Models"
                ],
                "summary": "Get a list of all user models",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Is TargetModel ?",
                        "name": "isTargetModel",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(sample) This is a list of models",
                        "schema": {
                            "$ref": "#/definitions/pkg_api_rest_handler.GetModelsResp"
                        }
                    },
                    "404": {
                        "description": "model not found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/onpremmodel": {
            "get": {
                "description": "Get a list of on-premise models.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[API] On-Premise Migration Models"
                ],
                "summary": "Get a list of on-premise models",
                "responses": {
                    "200": {
                        "description": "(sample) This is a list of models",
                        "schema": {
                            "$ref": "#/definitions/pkg_api_rest_handler.GetOnPremModelsResp"
                        }
                    },
                    "404": {
                        "description": "model not found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new on-premise model with the given information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[API] On-Premise Migration Models"
                ],
                "summary": "Create a new on-premise model",
                "parameters": [
                    {
                        "description": "model information",
                        "name": "Model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_api_rest_handler.CreateOnPremModelReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "(Sample) This is a sample description for success response in Swagger UI",
                        "schema": {
                            "$ref": "#/definitions/pkg_api_rest_handler.CreateOnPremModelResp"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/onpremmodel/{id}": {
            "get": {
                "description": "Get a specific on-premise model.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[API] On-Premise Migration Models"
                ],
                "summary": "Get a specific on-premise model",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Model ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(Sample) a model",
                        "schema": {
                            "$ref": "#/definitions/pkg_api_rest_handler.GetOnPremModelResp"
                        }
                    },
                    "404": {
                        "description": "model not found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a on-premise model with the given information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[API] On-Premise Migration Models"
                ],
                "summary": "Update a on-premise model",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Model ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Model information to update",
                        "name": "Model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg_api_rest_handler.UpdateOnPremModelReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "(Sample) This is a sample description for success response in Swagger UI",
                        "schema": {
                            "$ref": "#/definitions/pkg_api_rest_handler.UpdateOnPremModelResp"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a on-premise model with the given information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[API] On-Premise Migration Models"
                ],
                "summary": "Delete a on-premise model",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Model ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Model deletion successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Model Not Found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/readyz": {
            "get": {
                "description": "Check Damselfly is ready",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] System management"
                ],
                "summary": "Check Damselfly is ready",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pkg_api_rest_handler.ResReadyz"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/pkg_api_rest_handler.ResReadyz"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.TbMciDynamicReq": {
            "type": "object",
            "required": [
                "name",
                "vm"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Made in CB-TB"
                },
                "installMonAgent": {
                    "description": "InstallMonAgent Option for CB-Dragonfly agent installation ([yes/no] default:yes)",
                    "type": "string",
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "example": "no"
                },
                "label": {
                    "description": "Label is for describing the object by keywords",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "mci01"
                },
                "systemLabel": {
                    "description": "SystemLabel is for describing the mci in a keyword (any string can be used) for special System purpose",
                    "type": "string",
                    "example": ""
                },
                "vm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TbVmDynamicReq"
                    }
                }
            }
        },
        "model.TbVmDynamicReq": {
            "type": "object",
            "required": [
                "commonImage",
                "commonSpec"
            ],
            "properties": {
                "commonImage": {
                    "description": "CommonImage is field for id of a image in common namespace",
                    "type": "string",
                    "example": "ubuntu18.04"
                },
                "commonSpec": {
                    "description": "CommonSpec is field for id of a spec in common namespace",
                    "type": "string",
                    "example": "aws+ap-northeast-2+t2.small"
                },
                "connectionName": {
                    "description": "if ConnectionName is given, the VM tries to use associtated credential.\nif not, it will use predefined ConnectionName in Spec objects",
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "example": "Description"
                },
                "label": {
                    "description": "Label is for describing the object by keywords",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "VM name or subGroup name if is (not empty) \u0026\u0026 (\u003e 0). If it is a group, actual VM name will be generated with -N postfix.",
                    "type": "string",
                    "example": "g1-1"
                },
                "rootDiskSize": {
                    "description": "\"default\", Integer (GB): [\"50\", ..., \"1000\"]",
                    "type": "string",
                    "default": "default",
                    "example": "default, 30, 42, ..."
                },
                "rootDiskType": {
                    "description": "\"\", \"default\", \"TYPE1\", AWS: [\"standard\", \"gp2\", \"gp3\"], Azure: [\"PremiumSSD\", \"StandardSSD\", \"StandardHDD\"], GCP: [\"pd-standard\", \"pd-balanced\", \"pd-ssd\", \"pd-extreme\"], ALIBABA: [\"cloud_efficiency\", \"cloud\", \"cloud_essd\"], TENCENT: [\"CLOUD_PREMIUM\", \"CLOUD_SSD\"]",
                    "type": "string",
                    "default": "default",
                    "example": "default, TYPE1, ..."
                },
                "subGroupSize": {
                    "description": "if subGroupSize is (not empty) \u0026\u0026 (\u003e 0), subGroup will be generated. VMs will be created accordingly.",
                    "type": "string",
                    "default": "1",
                    "example": "3"
                },
                "vmUserPassword": {
                    "type": "string"
                }
            }
        },
        "onprem.CpuProperty": {
            "type": "object",
            "required": [
                "cores",
                "cpus",
                "threads"
            ],
            "properties": {
                "architecture": {
                    "type": "string",
                    "example": "x86_64"
                },
                "cores": {
                    "description": "Number of physical cores per CPU",
                    "type": "integer",
                    "example": 18
                },
                "cpus": {
                    "description": "Number of physical CPUs (sockets)",
                    "type": "integer",
                    "example": 2
                },
                "maxSpeed": {
                    "description": "Maximum speed in GHz",
                    "type": "number",
                    "example": 3.6
                },
                "model": {
                    "type": "string",
                    "example": "Intel(R) Xeon(R) Gold 6140 CPU @ 2.30GHz"
                },
                "threads": {
                    "description": "Number of logical CPUs (threads) per CPU with hyper-threading enabled",
                    "type": "integer",
                    "example": 36
                },
                "vendor": {
                    "type": "string",
                    "example": "GenuineIntel"
                }
            }
        },
        "onprem.DiskProperty": {
            "type": "object",
            "required": [
                "label",
                "totalSize",
                "type"
            ],
            "properties": {
                "available": {
                    "description": "Unit GiB",
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "totalSize": {
                    "description": "Unit GiB",
                    "type": "integer",
                    "example": 1024
                },
                "type": {
                    "description": "SSD, HDD",
                    "type": "string",
                    "example": "SSD"
                },
                "used": {
                    "description": "Unit GiB",
                    "type": "integer"
                }
            }
        },
        "onprem.MemoryProperty": {
            "type": "object",
            "required": [
                "totalSize",
                "type"
            ],
            "properties": {
                "available": {
                    "description": "Unit GiB",
                    "type": "integer"
                },
                "totalSize": {
                    "description": "Unit GiB",
                    "type": "integer",
                    "example": 128
                },
                "type": {
                    "type": "string",
                    "example": "DDR4"
                },
                "used": {
                    "description": "Unit GiB",
                    "type": "integer"
                }
            }
        },
        "onprem.NetworkInterfaceProperty": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "ipv4CidrBlocks": {
                    "description": "IPv4 address with prefix length (e.g., 192.168.0.21/24), instead of inet addr, Bcast, and Mask",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ipv6CidrBlocks": {
                    "description": "IPv6 address with prefix length (e.g., \"2001:db8::1/64\")",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "macAddress": {
                    "description": "MAC address",
                    "type": "string"
                },
                "mtu": {
                    "description": "Maximum Transmission Unit (MTU) in bytes",
                    "type": "integer"
                },
                "name": {
                    "description": "Interface name (e.g., eth0, ens01, enp0s3)",
                    "type": "string"
                },
                "state": {
                    "description": "Interface state (e.g., UP, DOWN)",
                    "type": "string"
                }
            }
        },
        "onprem.NetworkProperty": {
            "type": "object",
            "properties": {
                "ipv4Networks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "172.26.240.0/20"
                    ]
                },
                "ipv6Networks": {
                    "description": "TBD",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "onprem.OnPremInfra": {
            "type": "object",
            "required": [
                "servers"
            ],
            "properties": {
                "network": {
                    "$ref": "#/definitions/onprem.NetworkProperty"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/onprem.ServerProperty"
                    }
                }
            }
        },
        "onprem.OsProperty": {
            "type": "object",
            "required": [
                "prettyName"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "ubuntu"
                },
                "idLike": {
                    "type": "string",
                    "example": "debian"
                },
                "name": {
                    "type": "string",
                    "example": "Ubuntu"
                },
                "prettyName": {
                    "description": "Pretty name",
                    "type": "string",
                    "example": "Ubuntu 22.04.3 LTS"
                },
                "version": {
                    "description": "Full version string",
                    "type": "string",
                    "example": "22.04.3 LTS (Jammy Jellyfish)"
                },
                "versionCodename": {
                    "type": "string",
                    "example": "jammy"
                },
                "versionId": {
                    "type": "string",
                    "example": "22.04"
                }
            }
        },
        "onprem.RouteProperty": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Destination network, expressed in CIDR format",
                    "type": "string"
                },
                "gateway": {
                    "description": "Gateway address to which packets are forwarded",
                    "type": "string"
                },
                "interface": {
                    "description": "Network interface associated with the route",
                    "type": "string"
                },
                "linkState": {
                    "description": "Link state of the route (e.g., UP, DOWN)",
                    "type": "string"
                },
                "metric": {
                    "description": "Metric value indicating the priority of the route",
                    "type": "integer"
                },
                "protocol": {
                    "description": "Protocol used to set the route (e.g., kernel, static)",
                    "type": "string"
                },
                "scope": {
                    "description": "Scope of the route (e.g., global, link, host)",
                    "type": "string"
                },
                "source": {
                    "description": "Optionally stores the source address (used for policy-based routing)",
                    "type": "string"
                }
            }
        },
        "onprem.ServerProperty": {
            "type": "object",
            "properties": {
                "cpu": {
                    "$ref": "#/definitions/onprem.CpuProperty"
                },
                "dataDisks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/onprem.DiskProperty"
                    }
                },
                "hostname": {
                    "type": "string"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/onprem.NetworkInterfaceProperty"
                    }
                },
                "memory": {
                    "$ref": "#/definitions/onprem.MemoryProperty"
                },
                "os": {
                    "$ref": "#/definitions/onprem.OsProperty"
                },
                "rootDisk": {
                    "$ref": "#/definitions/onprem.DiskProperty"
                },
                "routingTable": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/onprem.RouteProperty"
                    }
                }
            }
        },
        "pkg_api_rest_handler.CloudModelRespInfo": {
            "type": "object",
            "required": [
                "cloudInfraModel"
            ],
            "properties": {
                "cloudInfraModel": {
                    "$ref": "#/definitions/model.TbMciDynamicReq"
                },
                "cloudModelVersion": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "csp": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isCloudModel": {
                    "type": "boolean"
                },
                "isInitUserModel": {
                    "type": "boolean"
                },
                "isTargetModel": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "userModelName": {
                    "type": "string"
                },
                "userModelVersion": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "pkg_api_rest_handler.CreateCloudModelReq": {
            "type": "object",
            "required": [
                "cloudInfraModel"
            ],
            "properties": {
                "cloudInfraModel": {
                    "$ref": "#/definitions/model.TbMciDynamicReq"
                },
                "csp": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "isInitUserModel": {
                    "type": "boolean"
                },
                "isTargetModel": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "userModelName": {
                    "type": "string"
                },
                "userModelVersion": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "pkg_api_rest_handler.CreateCloudModelResp": {
            "type": "object",
            "required": [
                "cloudInfraModel"
            ],
            "properties": {
                "cloudInfraModel": {
                    "$ref": "#/definitions/model.TbMciDynamicReq"
                },
                "cloudModelVersion": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "csp": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isCloudModel": {
                    "type": "boolean"
                },
                "isInitUserModel": {
                    "type": "boolean"
                },
                "isTargetModel": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "userModelName": {
                    "type": "string"
                },
                "userModelVersion": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "pkg_api_rest_handler.CreateOnPremModelReq": {
            "type": "object",
            "required": [
                "onpremiseInfraModel"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "isInitUserModel": {
                    "type": "boolean"
                },
                "onpremiseInfraModel": {
                    "$ref": "#/definitions/onprem.OnPremInfra"
                },
                "userId": {
                    "type": "string"
                },
                "userModelName": {
                    "type": "string"
                },
                "userModelVersion": {
                    "type": "string"
                }
            }
        },
        "pkg_api_rest_handler.CreateOnPremModelResp": {
            "type": "object",
            "required": [
                "onpremiseInfraModel"
            ],
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isCloudModel": {
                    "type": "boolean"
                },
                "isInitUserModel": {
                    "type": "boolean"
                },
                "isTargetModel": {
                    "type": "boolean"
                },
                "onpremModelVersion": {
                    "type": "string"
                },
                "onpremiseInfraModel": {
                    "$ref": "#/definitions/onprem.OnPremInfra"
                },
                "updateTime": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "userModelName": {
                    "type": "string"
                },
                "userModelVersion": {
                    "type": "string"
                }
            }
        },
        "pkg_api_rest_handler.GetCloudModelResp": {
            "type": "object",
            "required": [
                "cloudInfraModel"
            ],
            "properties": {
                "cloudInfraModel": {
                    "$ref": "#/definitions/model.TbMciDynamicReq"
                },
                "cloudModelVersion": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "csp": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isCloudModel": {
                    "type": "boolean"
                },
                "isInitUserModel": {
                    "type": "boolean"
                },
                "isTargetModel": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "userModelName": {
                    "type": "string"
                },
                "userModelVersion": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "pkg_api_rest_handler.GetCloudModelsResp": {
            "type": "object",
            "properties": {
                "models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_api_rest_handler.CloudModelRespInfo"
                    }
                }
            }
        },
        "pkg_api_rest_handler.GetModelsResp": {
            "type": "object",
            "properties": {
                "models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_api_rest_handler.ModelRespInfo"
                    }
                }
            }
        },
        "pkg_api_rest_handler.GetOnPremModelResp": {
            "type": "object",
            "required": [
                "onpremiseInfraModel"
            ],
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isCloudModel": {
                    "type": "boolean"
                },
                "isInitUserModel": {
                    "type": "boolean"
                },
                "isTargetModel": {
                    "type": "boolean"
                },
                "onpremModelVersion": {
                    "type": "string"
                },
                "onpremiseInfraModel": {
                    "$ref": "#/definitions/onprem.OnPremInfra"
                },
                "updateTime": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "userModelName": {
                    "type": "string"
                },
                "userModelVersion": {
                    "type": "string"
                }
            }
        },
        "pkg_api_rest_handler.GetOnPremModelsResp": {
            "type": "object",
            "properties": {
                "models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg_api_rest_handler.OnPremModelRespInfo"
                    }
                }
            }
        },
        "pkg_api_rest_handler.ModelRespInfo": {
            "type": "object",
            "required": [
                "cloudInfraModel",
                "onpremiseInfraModel"
            ],
            "properties": {
                "cloudInfraModel": {
                    "$ref": "#/definitions/model.TbMciDynamicReq"
                },
                "cloudModelVersion": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "csp": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isCloudModel": {
                    "type": "boolean"
                },
                "isInitUserModel": {
                    "type": "boolean"
                },
                "isTargetModel": {
                    "type": "boolean"
                },
                "onpremModelVersion": {
                    "type": "string"
                },
                "onpremiseInfraModel": {
                    "$ref": "#/definitions/onprem.OnPremInfra"
                },
                "region": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "userModelName": {
                    "type": "string"
                },
                "userModelVersion": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "pkg_api_rest_handler.OnPremModelRespInfo": {
            "type": "object",
            "required": [
                "onpremiseInfraModel"
            ],
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isCloudModel": {
                    "type": "boolean"
                },
                "isInitUserModel": {
                    "type": "boolean"
                },
                "isTargetModel": {
                    "type": "boolean"
                },
                "onpremModelVersion": {
                    "type": "string"
                },
                "onpremiseInfraModel": {
                    "$ref": "#/definitions/onprem.OnPremInfra"
                },
                "updateTime": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "userModelName": {
                    "type": "string"
                },
                "userModelVersion": {
                    "type": "string"
                }
            }
        },
        "pkg_api_rest_handler.ResHTTPVersion": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "pkg_api_rest_handler.ResReadyz": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "pkg_api_rest_handler.UpdateCloudModelReq": {
            "type": "object",
            "required": [
                "cloudInfraModel"
            ],
            "properties": {
                "cloudInfraModel": {
                    "$ref": "#/definitions/model.TbMciDynamicReq"
                },
                "csp": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "isInitUserModel": {
                    "type": "boolean"
                },
                "isTargetModel": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "userModelName": {
                    "type": "string"
                },
                "userModelVersion": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "pkg_api_rest_handler.UpdateCloudModelResp": {
            "type": "object",
            "required": [
                "cloudInfraModel"
            ],
            "properties": {
                "cloudInfraModel": {
                    "$ref": "#/definitions/model.TbMciDynamicReq"
                },
                "cloudModelVersion": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "csp": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isCloudModel": {
                    "type": "boolean"
                },
                "isInitUserModel": {
                    "type": "boolean"
                },
                "isTargetModel": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "userModelName": {
                    "type": "string"
                },
                "userModelVersion": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "pkg_api_rest_handler.UpdateOnPremModelReq": {
            "type": "object",
            "required": [
                "onpremiseInfraModel"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "isInitUserModel": {
                    "type": "boolean"
                },
                "onpremiseInfraModel": {
                    "$ref": "#/definitions/onprem.OnPremInfra"
                },
                "userId": {
                    "type": "string"
                },
                "userModelName": {
                    "type": "string"
                },
                "userModelVersion": {
                    "type": "string"
                }
            }
        },
        "pkg_api_rest_handler.UpdateOnPremModelResp": {
            "type": "object",
            "required": [
                "onpremiseInfraModel"
            ],
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isCloudModel": {
                    "type": "boolean"
                },
                "isInitUserModel": {
                    "type": "boolean"
                },
                "isTargetModel": {
                    "type": "boolean"
                },
                "onpremModelVersion": {
                    "type": "string"
                },
                "onpremiseInfraModel": {
                    "$ref": "#/definitions/onprem.OnPremInfra"
                },
                "updateTime": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "userModelName": {
                    "type": "string"
                },
                "userModelVersion": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "latest",
	Host:             "",
	BasePath:         "/damselfly",
	Schemes:          []string{},
	Title:            "CM-Damselfly REST API",
	Description:      "CM-Damselfly REST API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
